(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    ; (leftstuff)
    (music_widget)
    (rightstuff)))

; (defwidget leftstuff []
;   (box :class "sidestuff" :orientation "h" :space-evenly false :halign "start" 
;     (music_widget)
;     ))

; (deflisten window_title
;   "leftwm-state -w 0 -s '{{ window_title }}'")

 (defpoll window_title :interval "2s"
                       :initial ""
   "xdotool getactivewindow getwindowname")


(defwidget rightstuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ; mailupdatecmd
    (mailupdatewidget)
    ; newsupdatecmd
    (newsupdatewidget)
    ; archupdatecmd
    (archupdatewidget)
    ; eww_weatherupdatecmd
    (eww_weather_widget)
    (metric :label "🖥️"
            :value {EWW_CPU.avg}
            :onchange "")
    (metric :label "🧠"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric2  :label "🔊"
              :value eww_volume
              :onchange "pamixer --set-volume {} --allow-boost")
    ; (metric :label "💾"
    ;         :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
    ;         :onchange "")
    battery
    time
    (powerbutton)
    empty_space
    empty_space
    ))
    ; ))
;
; (defwidget workspaces []
    ; (box :class "workspaces"
         ; :orientation "h"
         ; :space-evenly true
         ; :halign "start"
         ; :spacing 10
            ; (button :class "ws-button-mine" :onclick "leftwm-command \"SendWorkspaceToTag 0 0\"" `1`)
            ; (button :class "ws-button-busy" :onclick "leftwm-command \"SendWorkspaceToTag 0 1\"" `2`)
            ; (button :class "ws-button-busy" :onclick "leftwm-command \"SendWorkspaceToTag 0 2\"" `3`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 3\"" `·`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 4\"" `·`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 5\"" `·`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 6\"" `·`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 7\"" `·`)
            ; (button :class "ws-button" :onclick "leftwm-command \"SendWorkspaceToTag 0 8\"" `·`)))


(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly false
       :halign "start"
       :spacing 10
    empty_space
    (literal :content {wm-tags})
    empty_space
    (box :class "window_title"
      (label :text window_title
           :limit-width 40))
    )
)

(defvar empty_space " ")

(defwidget music_widget []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "start"
    (button :onclick "scripts/player-mpris.py play-pause"
            :onrightclick "scripts/player-mpris.py next"
            :onmiddleclick "scripts/player-mpris.py previous"
;            :timeout "5s"
      {music != "" ? "💿 ${music}" : ""})
    ))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defwidget metric2 [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 151
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "scripts/player-mpris.py --format '{icon} {:t30:{artist}:} - {:t40:{title}:}'")
  ; "scripts/player-mpris.py --format '{icon} {:t20:{artist}:} - {:t20:{title}:}' || true")

; (deflisten music :initial ""
;   "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

; (deflisten volume :initial ""
;   "tail -F ~/.local/share/eww_volume.tmp")

(defpoll eww_volume :interval "2s"
                    :initial "80"
  "pamixer --get-volume || true")

(defpoll time :interval "60s"
  "date '+%d(%a),%H:%M'")

(defwidget archupdatewidget []
  (box :orientation "horizontal"
       :halign "center"
       :class "archupdate"
    ; archupdate 
    (button :onclick "WINIT_X11_SCALE_FACTOR=1 setsid -w -f alacritty -e scripts/archafter"
      arch)))

(defpoll archupdatecmd :interval "1h"
                       :initial ""
                       :visible false
  "scripts/archup")

(deflisten arch :initial ""
  `tail -F ~/.local/share/checkup.tmp 2>/dev/null`)

(defwidget mailupdatewidget []
  (box :orientation "horizontal"
       :halign "center"
       :class "mailupdate"
    (button :onclick "WINIT_X11_SCALE_FACTOR=1 setsid -w -f alacritty -e scripts/mailafter"
      mail)))

(defpoll mailupdatecmd :interval "2h"
                       :initial ""
                       :visible false
  "scripts/mailup")

(deflisten mail :initial ""
  `tail -F ~/.local/share/mailupdate.tmp 2>/dev/null`)

(defwidget newsupdatewidget []
  (box :orientation "horizontal"
       :halign "center"
       :class "newsupdate"
    (button :onclick "WINIT_X11_SCALE_FACTOR=1 setsid -w -f alacritty -e 'scripts/newsafter'"
      news)))

(defpoll newsupdatecmd :interval "2h"
                    :initial ""
                    :run-while "wget -q --spider example.org"
                    ; :run-while "!(pgrep newsboat)"
                    :timeout "30s"
                    :visible false
  "scripts/newsup")

(deflisten news :initial ""
  `tail -F ~/.local/share/newsupdate.tmp 2>/dev/null`)

(defpoll eww_weatherupdatecmd :interval "2h"
                              :initial ""
                              :visible false
  "scripts/weatherup")

(defwidget eww_weather_widget []
  (box :orientation "horizontal"
       :halign "center"
       :class "weather"
    (button :onclick "scripts/weatherup"
      eww_weather)))

(deflisten eww_weather 
  `tail -F ~/.local/share/weatherup.tmp 2>/dev/null`)

(defpoll battery :interval "60s"
  "scripts/sb-battery")

(defwidget powerbutton[]
  (box :orientation "horizontal"
       :halign "center"
    (button :onclick "scripts/sysact-leftwm" 
    ; (button :onclick "scripts/powermenu.sh" 
      " 🔘 ")))




(deflisten wm-tags
  "leftwm-state -w 0 -t ~/.config/leftwm/themes/current/template.liquid")

(defwindow bar0
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "20px")
  (bar))

(defwindow bar1
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "20px")
  (bar))
